@page "/home"

@layout EmptyLayout
@using AplicacaoFullStack.Models
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager;
@inject AplicacaoFullStack.Services.IClienteService ClienteService;

<PageTitle>Home</PageTitle>

<div class="limitador">
    <div class="row">
        <h1 class="titulo-login">Clientes</h1>

        <button @onclick="cadastrar" class="botao-create" > Cadastrar</button>
    </div>

<table class="table table-responsive table-striped">
    <thead style="border-top: 1px solid black">
        <tr>
            <th>Id</th>
            <th>Nome</th>
            <th>Telefone</th>
            <th>Email</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if(clientes != null && clientes.Count > 0)
        {
            foreach(var item in clientes)
            {
                <tr>
                    <td>@item.id</td>
                    <td>@item.nome</td>
                    <td>@item.telefone</td>
                    <td>@item.email</td>
                    <td>
                        <button @onclick="atualizar" class="botao-update">Atualizar</button>
                        <button class="botao-delete" @onclick="async () => await DeleteCliente(item.id)">Deletar</button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
</div>

@code{
    List<Cliente> clientes = new();

    async Task atualizar()
    {
        foreach(var item in clientes)
        NavigationManager.NavigateTo("/update/" + @item.id);
    }
    
    async Task cadastrar()
    {
        NavigationManager.NavigateTo("/create");
    }

    protected override async Task OnInitializedAsync()
    {
        clientes = await ClienteService.FindAll();
    }

    async Task DeleteCliente(Guid id)
    {
        bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "Tem certeza que deseja deletar este cliente ?");
        if (confirmed is false)
            return;

        var cliente = await ClienteService.GetBy(id);

        await ClienteService.Delete(cliente);

        clientes = await ClienteService.FindAll();

        StateHasChanged();
    }
}